def display_board(board):
    for row in board:
        print('|'.join(row))
        print('-' * 5)

def check_win(board, player):
    # Check rows, columns, and diagonals for a win
    return any(all(cell == player for cell in row) for row in board) or \
           any(all(board[i][j] == player for i in range(3)) for j in range(3)) or \
           all(board[i][i] == player for i in range(3)) or \
           all(board[i][2 - i] == player for i in range(3))

def check_draw(board):
    return all(cell != ' ' for row in board for cell in row)

def minimax(board, depth, is_maximizing):
    if check_win(board, 'O'):
        return 1  # AI wins
    elif check_win(board, 'X'):
        return -1  # Human wins
    elif check_draw(board):
        return 0  # Draw

    if is_maximizing:
        best_score = float('-inf')
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'O'
                    score = minimax(board, depth + 1, False)
                    board[i][j] = ' '
                    best_score = max(best_score, score)
        return best_score
    else:
        best_score = float('inf')
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'X'
                    score = minimax(board, depth + 1, True)
                    board[i][j] = ' '
                    best_score = min(best_score, score)
        return best_score

def best_move(board):
    best_score = float('-inf')
    move = (-1, -1)
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                board[i][j] = 'O'
                score = minimax(board, 0, False)
                board[i][j] = ' '
                if score > best_score:
                    best_score = score
                    move = (i, j)
    return move

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    while True:
        display_board(board)

        # Player's move
        try:
            row, col = map(int, input("Enter row and column (0-2) for X: ").split())
            if board[row][col] != ' ':
                print("Invalid move, try again.")
                continue
            board[row][col] = 'X'
        except (ValueError, IndexError):
            print("Invalid input, please enter numbers between 0 and 2.")
            continue

        if check_win(board, 'X'):
            display_board(board)
            print("You win!")
            break
        if check_draw(board):
            display_board(board)
            print("It's a draw!")
            break

        # AI's move
        ai_row, ai_col = best_move(board)
        board[ai_row][ai_col] = 'O'
        print(f"AI played O at {ai_row}, {ai_col}")

        if check_win(board, 'O'):
            display_board(board)
            print("AI wins!")
            break
        if check_draw(board):
            display_board(board)
            print("It's a draw!")
            break

play_game()
